
 Descriptions
 ---------------------
 This program checks for the spam filter. We give it some emails as input and 
 it tells us if the provided email is spam or not and it depends if that email
 is in the intended file or not. If it is, it's gonna be spam otherwise it is 
 not.

 How to compile
 ----------------------------------
 To compile this program, simply navigate to the intended directory and type 
 make <filename> 
 the filename is the file that has the main class on it. In this case,
 it's gonna be like this :
 make spamFilter

 How to run
 -----------------------
 to run the program, after compiling, just type executable name followed by the
 command line argument.Your output depends on the number of command line 
 arguments that you insert. For this program the valid command line are 1 and 2
 example :
 ./spamFilter -h
 ./spamFilter -i ~/../public/emails/emails_10

 Normal output
 -------------------------
 The output is printed is standard output. Here is an example of output:

 cs30s220yx@pi-cluster-001:pa1$ ./spamFilter -h

 Usage: ./spamFilter {-i dataFile | -h}
     -i dataFile -- The file containing the data
     -h          -- Displays this long usage message
cs30s220yx@pi-cluster-001:pa1$

Abnormal output
---------------------------------
It is printed in standard output and it happens when the number of commandline
is not valid. here is an example:

cs30s220yx@pi-cluster-001:pa1$ ./spamFilter
Incorrect number of args.

Usage: ./spamFilter {-i dataFile | -h}

cs30s220yx@pi-cluster-001:pa1$

Testing
--------------------------
In this program there are 3 test files to test 3 of our source files
testprependNode.c  to test the correctness of prependNode.c
testpopulateTable.c to test the correctness of populateTable.c
testhash.c to test the correctness of test.c

in each case, if the pass the test, it means that specific file works correctly

Questions
-----------------------------

1- You realized you made a spelling error when using one of the constants from 
the pa1.h file. Instead of DEFAULT_SIZE, youâ€™ve been typing DEFAUL_SIZE
(without the T). How would you find and replace all occurrences of DEFAUL_SIZE 
in your file to be DEFAULT_SIZE?

Answer : %s/DEFAUL_SIZE/DEFAULT_SIZE

2- What Git command(s) would you use to list files with changes since the 
last commit?

Answer: git diff

3- What Git command would you use to undo a bad commit that has been already
pushed?

Answer: git revert <commitID>
example, if the commit ID is abcdef
it's gonna be : git revert abcdef

4- What Git command would you use to see the history of all your 
commits?

Answer: git log


